---
title: "Merging"
format: html
editor: visual
---

## Correzioni manuali

Preparazione

```{r}
Sys.setlocale("LC_ALL", "UTF-8")
library(dplyr, warn.conflicts = FALSE)
library(arrow, warn.conflicts = FALSE)
library(openxlsx, warn.conflicts = FALSE)
library(assertr, warn.conflicts = FALSE)

source("src/database/startup.R")
source("src/database/query/data.R")
source("notebooks/corrections/manual_corrections.R")

conns <- load_dbs()
sets <- c("ER", "FVG", "LOM", "MAR", "TAA2", "TOS", "UMB", "VDA", "PIE", "LIG", "VEN")
```

Caricamento di metadati e correzioni

```{r}
merged_metadata <- query_checkpoint_meta(sets, "merged", conns$data) |>
  collect() |>
  as.data.frame()

corrections <- fs::path_abs("./external/correzioni") |>
  fs::dir_ls(regex = regex("^[^\\~]+_edit.xlsx")) |>
  purrr::map(
    .f = \(path) read.xlsx(path) |>
      select(sensor_key, dataset, from_sensor_keys, from_datasets, ends_with("_ok"), ends_with("_precision"), keep, note) |>
      mutate(
        across(
          c(dataset, note), ~ as.character(.)
        ),
        across(
          c(lon_ok, lat_ok, ele_ok, ends_with("_precision")), ~ as.numeric(.)
        ),
        sensor_key = as.integer(sensor_key)
      )
  ) |>
  bind_rows()

to_integr_cols <- corrections |>
  colnames() |>
  str_subset(regex("_ok$")) |>
  str_remove(regex("_ok$"))
integrator_cols <- corrections |>
  colnames() |>
  str_subset(regex("_ok$"))
to_integr_cols
```

Integrazione delle correzioni

```{r}
corrected_metadata <- integrate_corrections(merged_metadata, corrections, conns$stations)
```

Salvataggio in formato checkpoint

```{r}
source("notebooks/ds_regionali/procedure/checkpoint.R")
data <- query_checkpoint_data(sets, "merged", conns$data) |> to_arrow()
chkpt <- as_checkpoint(corrected_metadata, data, check_schema = FALSE)
save_checkpoint(chkpt, "full", "merged_corrected", check_schema = FALSE, partitioning = c("variable"))
print("done")
```

```{r}
query_checkpoint_data("full", "merged_corrected", conns$data)
```
